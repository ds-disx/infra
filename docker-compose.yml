version: "3.8"
name: disx-prod

services:
  disx-db:
    container_name: disx-db
    image: postgres:latest
    ports:
      - 3011:3011
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGPORT: 3011
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=postgres --dbname=postgres"]
      interval: 2s
      timeout: 2s
      retries: 6

  comment-db:
    container_name: comment-db
    image: postgres:latest
    ports:
      - 3021:3021
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGPORT: 3021
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=postgres --dbname=postgres"]
      interval: 2s
      timeout: 2s
      retries: 6

  comment-service:
    container_name: comment-service
    image: ghcr.io/ds-disx/comment-service:latest
    ports:
      - "3020:3020"
    depends_on:
      comment-db:
        condition: service_healthy

  disx-service:
    container_name: disx-service
    image: ghcr.io/ds-disx/disx-service:latest
    ports:
      - "3010:3010"
    depends_on:
      disx-db:
        condition: service_healthy

  user-service:
    container_name: user-service
    image: ghcr.io/ds-disx/user-service:latest
    ports:
      - "3040:3040"

  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - disx-service

  api-gateway:
    container_name: api-gateway
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - disx-service
      - comment-service
      - user-service
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest


  # keycloak:
  #   container_name: keycloak
  #   image: quay.io/keycloak/keycloak:latest
  #   ports:
  #     - 8090:8080
  #   environment:
  #     KC_DB: postgres
  #     KC_DB_URL: jdbc:postgresql://keycloak-db:8091/keycloak
  #     KC_DB_USERNAME: keycloak
  #     KC_DB_PASSWORD: password
  #     KC_HOSTNAME: localhost
  #     KC_LOG_LEVEL: info
  #     KC_METRICS_ENABLED: true
  #     KC_HEALTH_ENABLED: true
  #     KEYCLOAK_ADMIN: admin
  #     KEYCLOAK_ADMIN_PASSWORD: admin
  #   command: start-dev
  #   depends_on:
  #     keycloak-db:
  #       condition: service_healthy

  # keycloak-db:
  #   container_name: keycloak-db
  #   image: postgres:latest
  #   ports:
  #     - 8091:8091
  #   environment:
  #     POSTGRES_DB: keycloak
  #     POSTGRES_USER: keycloak
  #     POSTGRES_PASSWORD: password
  #     PGPORT: 8091
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready --username=postgres --dbname=postgres"]
  #     interval: 2s
  #     timeout: 2s
  #     retries: 6
