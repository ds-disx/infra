version: "3.8"

services:
  post-db:
    container_name: post-db
    image: postgres:latest
    ports:
      - 3011:3011
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGPORT: 3011
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=postgres --dbname=postgres"]
      interval: 5s
      timeout: 5s
      retries: 6

  post-service:
    container_name: post-service
    build:
      context: ../post-service
      dockerfile: src/main/docker/Dockerfile.jvm
    volumes:
      - ../post-service/build/quarkus-app:/deployments
    ports:
      - "3010:3010"
    environment:
      QUARKUS_HTTP_CORS: 'true'
      QUARKUS_HTTP_CORS_ORIGINS: '*'
      QUARKUS_HTTP_CORS_HEADERS: "accept,authorization,content-type,x-requested-with"
      QUARKUS_HTTP_CORS_METHODS: 'GET,POST,PUT,DELETE,OPTIONS'
      QUARKUS_HTTP_PORT: 3010
      QUARKUS_DATASOURCE_USERNAME: 'postgres'
      QUARKUS_DATASOURCE_PASSWORD: 'postgres'
      QUARKUS_DATASOURCE_JDBC_URL: 'jdbc:postgresql://post-db:3011/postgres'
    depends_on:
      post-db:
        condition: service_healthy

  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - post-service

  api-gateway:
    container_name: api-gateway
    image: nginx:latest
    ports:
      - 8080:8080
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - post-service

